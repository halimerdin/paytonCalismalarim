{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "bfe41d62",
   "metadata": {},
   "source": [
    "                    Fahri Vatansever Algoritma Geliştirme Kitabı Uygulamaları"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6a80cb23",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Merhaba\n"
     ]
    }
   ],
   "source": [
    "print(\"Merhaba\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f1b1d45a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "alo\n"
     ]
    }
   ],
   "source": [
    "print(\"alo\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9846c802",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'buda\\n    çok\\n    satırlık\\n    bir\\n    yorumdur.\\n'"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#bu tek satırlık bir yorumdur\n",
    "\"\"\"buda\n",
    "    çok\n",
    "    satırlık\n",
    "    bir\n",
    "    yorumdur.\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a303e61e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "al\u0000\n"
     ]
    }
   ],
   "source": [
    "print(\"al\\0\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fac22029",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "alo\\ burdayım\n"
     ]
    }
   ],
   "source": [
    "print(\"alo\\ burdayım\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f609ad48",
   "metadata": {},
   "source": [
    "üs alma işlemi ** ifadesi ile yapılır örneğin:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d1a585f5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "3**2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23800b49",
   "metadata": {},
   "source": [
    "çarpma işlemi * ifadesi ile , bölme işlemi / ifadesi ile, toplama + ifadesi ile, çıkarma - ifadesi ile yapılır. örneğin:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a48e9176",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6\n",
      "3.0\n",
      "5\n",
      "1\n"
     ]
    }
   ],
   "source": [
    "print(3*2)\n",
    "print(9/3)\n",
    "print(3+2)\n",
    "print(3-2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c650203",
   "metadata": {},
   "source": [
    "Mod alma işlemi % ifadesi ile yapılır. Mod almaktan kasdedilen ise bir sayıyı bir sayıya böldümüzde kalanın kaç olduğunu görmektir."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e458fa60",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "9%4"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa933ba3",
   "metadata": {},
   "source": [
    "a = a + b >>> a + = b olarak  yazabiliriz"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "81bf0418",
   "metadata": {},
   "source": [
    "x = x / y >>> x / = y olarak yazabiliriz\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a062255c",
   "metadata": {},
   "source": [
    "e = e - f >>> e - = f olarak yazabiliriz"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "202c0791",
   "metadata": {},
   "source": [
    "t = t * m >>> t * = m olarak yazabiliriz"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1297ce71",
   "metadata": {},
   "source": [
    "u = u % w  >>>  u % = w olarak yazabiliriz"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30c61a14",
   "metadata": {},
   "source": [
    "r = r ** p >>> u ** = w olarak yazabiliriz"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3f0962e",
   "metadata": {},
   "source": [
    "pythonda ayrıca tam sayı olarak dönüt verebilen bölme operatörü vardır ve // ile kullanılır. Normalde / ifadesi ile kullanıcıya dönüt olarak float bir sayı gelirken // ifadesiyle kullanıcıya tam sayı değeri verilir. aslında bu operatör kullanıcaya bölüm değerinin floor değerini gösterir."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ea56745f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4.5\n",
      "4\n"
     ]
    }
   ],
   "source": [
    "print(9/2)\n",
    "print(9//2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "033ff98c",
   "metadata": {},
   "source": [
    "tam sayı döndüren bölme ifadesini A = A // B yerine A // = B olarak kullanabiliriz"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0d4bef70",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
